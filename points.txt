Strings
-------
1. strings are immutable


st= "hello"

st = "world"

immutable - "str object does not support item assignment"

Data Structures
--------------
1. lists
2. dictionary
3. tuple
4. set

Lists
-----
same as arrays

Array?
------
1. collection of homogenous data
2. Contigious memory allocation


Lists
-----
1. collecition of hetrogenous data
2. Memory allocation is not contigious
3. ordered collection of data
4. it is mutable
5. it is subscriptable
6. lists are enclosed in []


Functions to manipulate lists
-----------------------------
'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort'


append, extend, insert

pop, remove, clear

----------------------------------------------------------------------------
Day03
----------------------------------------------------------------------------
clear, count, index, copy, reverse, sort

https://pythontutor.com/visualize.html#mode=edit


clear function for lists
------------------------

list.sort()
-----------
1. sort         -   will sort the original list
2. sorted       -   will take a copy of the list and then sort it

Dictionary
----------
associative arrays

No indexes, instead we have keys assigned to each value

d1 = {1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: 'e'}

keys = 1, 2, 3, 4 ,5
values = 'a', 'b', 'c', 'd', 'e'

keys are always unique
they are unordered collection

Functions to manipulate dictionaries
-------------------------------------
'clear', 'copy', 'fromkeys', 'get', 'items', 'keys', 'pop', 'popitem', 'setdefault', 'update', 'values'

Tuples
------
1. immutable lists
2. tuples are enclosed in ()



sets
----
1. unique collections
2. unordered collection
3. not subscriptable        (cannot be indexed)
4. mutable
5. {collection without keys and values}

====================================================================================
Day04
-----
Functions
---------
Using recursive calls:
    1. find the factorial of a function
    2. generate fibanocii series

Lambdas
--------
1. lambdas are anonymous functions
2. single expression

lambda(var1, var2...: expression)


Comprehension
--------------

Scopes
------
1. local
2. global
3. non local

accessibility       =>  display the value of the var, change the value of the var

=====================================================================================
Day - 5
-------------------------------------------------------------------------------------

Nested Functions
----------------
if a function is enclosed inside another function then we call it as closure

OOPS
----
1. Inheritance
2. Polymorphism
3. Abstraction
4. Ecapsulation

Every class that we create is inherited from object class or object is the base class of all classes

__main__   -> double under score main => dunder_main

self will have the name of the object that called the method

ply1 = Player('Sachin', 38)
ply1.get_details()          => ply1 is passed as an argument to self of get_details


class Arttribute
----------------
static variable and stay the same across objects

class method
------------
    1. we can access class attribute and change its value
    2. we can do mild changes the arguments used in the constructor
    3. class methods should be called with class names


=====================================================================================
Day - 6
-------------------------------------------------------------------------------------
Operator Overloading
--------------------
all arithmetic operators
------------------------
+   add
-   sub
/   div
*   mul
//  floor div


Duck Typing
-----------
anything that quaks is a duck


Packages and Modules
---------------------
Modules -> same as libraries in other technologies
any python file can be considered as a module

Packages
---------
packages are folders or directory where a module is stored

Mysql DB
--------

modules
-------
abc.MysqlConnect
xyz.MysqlConnect

packages are compared with classes in python

we need constructor to instantiate a class      ->  __init__

package -> __init__.py

any module that we import will first get converted from .py to .pyc file


Delhi
    - gurgaon

sounds
    - effects
        - dts.py
        - echo.py
        - surround.py
        - __init__.py
    - filters
    - formats


import module
import package.module
from module import function, class
from package import module
from package import *

File Handling
-------------
Mode of opening the file
------------------------
r - read mode (Default)
w - write mode
a - append mode

FL - position = seek(offset, whence)

offset - number of bytes
whence -
        0 - BOF
        1 - Current Position
        2 - EOF

seek(100, 0)        -> 100 bytes from BOF
seek(50, 1)         -> 50 bytes from CP

--------------------------------------------------------------------------------------------
Files
-----
JSON, XML, DB, Excel

Regex
Threads

Lib
----
functools
itertools







------------------------------------------------------------------------------------

Assignment - 1
==================================================
Item                                         Price
==================================================
Apples                                        0.40
Pears                                         0.50
Cantaloupes                                   1.92
Dried Apricots (16 oz.)                       8.00
Prunes (4 lbs.)                              12.00
==================================================

Assignment - 2
--------------
2. create a identity matrix

[[1, 0, 0],
 [0, 1, 0],
 [0, 0, 1]]



